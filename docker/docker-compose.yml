version: '3.8'

services:
  # app:
  #   build:
  #     context: ..
  #     dockerfile: docker/Dockerfile
  #   container_name: mms-backend    
  #   environment:
  #     - SPRING_PROFILES_ACTIVE=docker
  #     - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/mms
  #     - SPRING_DATASOURCE_USERNAME=admin
  #     - SPRING_DATASOURCE_PASSWORD=adminmms
  #     - STORAGE_TYPE=minio
  #     - STORAGE_MINIO_ENDPOINT=http://minio:9000
  #     - STORAGE_MINIO_ACCESSKEY=admin
  #     - STORAGE_MINIO_SECRETKEY=adminmms
  #     - STORAGE_MINIO_BUCKET=mms-media
  #   ports:
  #     - "8080:8080"
  #   depends_on:
  #     - db
  #     - minio
  #   networks:
  #     - mms-network
  #   restart: unless-stopped

  db:
    image: postgres:16-alpine
    container_name: mms-postgres
    environment:
      - POSTGRES_DB=mms
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=adminmms
    volumes:
      - ./volumes/postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - mms-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d mms"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  minio:
    image: minio/minio:latest
    container_name: mms-minio
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - ./volumes/minio_data:/data
    networks:
      - mms-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    restart: unless-stopped

networks:
  mms-network:
    driver: bridge

